apiVersion: apps/v1
kind: Deployment
metadata:
  name: voice-cloning-service
  labels:
    app: voice-cloning-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: voice-cloning-service
  template:
    metadata:
      labels:
        app: voice-cloning-service
    spec:
      containers:
      - name: voice-cloning-service
        image: voice-cloning-service:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: CONSUMER_QUEUE_NAME
          value: "voice-cloning-queue"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: RABBITMQ_HOST
          value: "192.168.1.218"
        - name: RABBITMQ_PORT
          value: "30672"
        - name: RABBITMQ_USER
          value: "admin"
        - name: RABBITMQ_PASSWORD
          value: "admin123"
        - name: RABBITMQ_VHOST
          value: "/"
        - name: USE_MOCK_MODE
          value: "false"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: voice-cloning-storage
          mountPath: /tmp/voice_cloning_output
        - name: logs
          mountPath: /var/log
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: voice-cloning-storage
        emptyDir: {}
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: voice-cloning-service
spec:
  selector:
    app: voice-cloning-service
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: ClusterIP 